@model string



<div class="modal fade modern-modal" id="passwordOnlyModal" tabindex="-1" aria-labelledby="passwordOnlyModalLabel" aria-hidden="true" data-bs-backdrop="static" data-bs-keyboard="false">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content modal-content-modern border-0">
            <div class="modal-header modal-header-modern d-flex justify-content-between align-items-center">
                <h5 class="welcome-text" id="passwordOnlyModalLabel">
                    Welcome back, <span class="username-highlight">@Model</span>
                </h5>
                <button type="button" class="close-btn-modern" data-bs-dismiss="modal" aria-label="Close">
                    <i class="bi bi-x-lg"></i>
                </button>
            </div>
            <div class="modal-body modal-body-modern">
                <form method="post" asp-action="PasswordOnlyLogin" id="passwordLoginForm" novalidate>
                    <div class="form-group-modern">
                        <label for="password" class="form-label-modern">Password</label>
                        <div class="input-container">
                            <i class="bi bi-shield-lock input-icon"></i>
                            <input type="password"
                                   id="password"
                                   name="password"
                                   class="form-input-modern"
                                   placeholder="Enter your password"
                                   required
                                   minlength="6"
                                   autocomplete="current-password" />
                            <button type="button" class="toggle-password" id="togglePassword" aria-label="Toggle password visibility">
                                <i class="bi bi-eye"></i>
                            </button>
                            <div class="invalid-feedback-modern">Password must be at least 6 characters long.</div>
                        </div>
                    </div>

                    <button type="submit" class="submit-btn-modern" id="submitBtn">
                        <i class="bi bi-arrow-clockwise loading-spinner"></i>
                        <span>Continue</span>
                    </button>

                    @if (!ViewData.ModelState.IsValid)
                    {
                        <div class="error-message">
                            @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                            {
                                <div>@error.ErrorMessage</div>
                            }
                        </div>
                    }
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    // Show modal on page load
    document.addEventListener('DOMContentLoaded', function() {
        const modal = new bootstrap.Modal(document.getElementById('passwordOnlyModal'), {
            backdrop: 'static',
            keyboard: false
        });
        modal.show();

        // Focus password input when modal is shown
        document.getElementById('passwordOnlyModal').addEventListener('shown.bs.modal', function() {
            document.getElementById('password').focus();
        });
    });

    // Enhanced form validation
    (function() {
        'use strict';
        const form = document.getElementById('passwordLoginForm');
        const passwordInput = document.getElementById('password');
        const submitBtn = document.getElementById('submitBtn');

        // Real-time validation
        passwordInput.addEventListener('input', function() {
            const value = this.value;
            if (value.length === 0) {
                this.classList.remove('is-invalid');
            } else if (value.length < 6) {
                this.classList.add('is-invalid');
            } else {
                this.classList.remove('is-invalid');
            }
        });

        // Enhanced form submission
        form.addEventListener('submit', function(e) {
            const password = passwordInput.value;

            // Validate password
            if (password.length < 6) {
                e.preventDefault();
                e.stopPropagation();
                passwordInput.classList.add('is-invalid');
                passwordInput.focus();
                return;
            }

            // Show loading state
            submitBtn.classList.add('loading');
            submitBtn.disabled = true;

            // If validation passes, form will submit normally
            // Loading state will be cleared by page redirect or handled by server response
        }, false);
    })();

    // Enhanced password visibility toggle
    document.getElementById('togglePassword').addEventListener('click', function() {
        const passwordInput = document.getElementById('password');
        const icon = this.querySelector('i');

        if (passwordInput.type === 'password') {
            passwordInput.type = 'text';
            icon.classList.remove('bi-eye');
            icon.classList.add('bi-eye-slash');
            this.setAttribute('aria-label', 'Hide password');
        } else {
            passwordInput.type = 'password';
            icon.classList.remove('bi-eye-slash');
            icon.classList.add('bi-eye');
            this.setAttribute('aria-label', 'Show password');
        }
    });

    // Keyboard shortcuts
    document.addEventListener('keydown', function(e) {
        // Enter key to submit when password field is focused
        if (e.key === 'Enter' && document.activeElement.id === 'password') {
            const form = document.getElementById('passwordLoginForm');
            form.dispatchEvent(new Event('submit'));
        }
    });
</script>