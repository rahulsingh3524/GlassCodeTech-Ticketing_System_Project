@model string

<div class="card shadow-lg border-0 rounded-4">
    <div class="card-body p-4">
        <h3 class="card-title text-center mb-4 fw-bold text-primary">
            Welcome back, <span class="text-dark">@Model</span>
        </h3>

        <form method="post" asp-action="PasswordOnlyLogin" id="passwordLoginForm" novalidate>
            <div class="mb-3">
                <label for="password" class="form-label">Password</label>
                <div class="input-group">
                    <input type="password"
                           id="password"
                           name="password"
                           class="form-control"
                           placeholder="Enter your password"
                           required
                           minlength="6"
                           autocomplete="current-password" />
                    <button type="button" class="btn btn-outline-secondary" id="togglePassword">
                        <i class="bi bi-eye"></i>
                    </button>
                </div>
                <div class="invalid-feedback">Password must be at least 6 characters long.</div>
            </div>

            <button type="submit" class="btn btn-primary w-100 py-2 mt-2">
                Continue
            </button>

            @if (!ViewData.ModelState.IsValid)
            {
                <div class="alert alert-danger mt-3">
                    @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                    {
                        <div>@error.ErrorMessage</div>
                    }
                </div>
            }
        </form>
    </div>
</div>

@section Scripts {
    <script>
        // Password toggle
        document.getElementById("togglePassword").addEventListener("click", function () {
            const passwordInput = document.getElementById("password");
            const icon = this.querySelector("i");
            if (passwordInput.type === "password") {
                passwordInput.type = "text";
                icon.classList.remove("bi-eye");
                icon.classList.add("bi-eye-slash");
            } else {
                passwordInput.type = "password";
                icon.classList.remove("bi-eye-slash");
                icon.classList.add("bi-eye");
            }
        });

        // Bootstrap validation
        (() => {
            'use strict';
            const form = document.getElementById('passwordLoginForm');
            form.addEventListener('submit', e => {
                if (!form.checkValidity()) {
                    e.preventDefault();
                    e.stopPropagation();
                }
                form.classList.add('was-validated');
            }, false);
        })();
    </script>
}
