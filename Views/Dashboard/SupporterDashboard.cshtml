@{
    ViewData["Title"] = "Supporter Dashboard";
    var tickets = ViewBag.Tickets as List<Dictionary<string, object>>;
    var statusCounts = ViewBag.StatusCounts as List<Dictionary<string, object>>;
}

<div class="container mt-5">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2>Supporter Dashboard</h2>
        
    </div>

@*     <div class="row mb-4">
        <div class="col-md-4">
            <div class="card shadow-sm p-3 mb-3">
                <h5>Tickets Assigned</h5>
                <h3 class="text-info">@((tickets != null) ? tickets.Count : 0)</h3>
            </div>
        </div>
        <div class="col-md-8">
            <div class="card shadow-sm p-3 mb-3">
                <h5>Ticket Status Summary</h5>
                
                <ul class="list-group">
                    @if (statusCounts != null)
                    {
                        foreach (var row in statusCounts)
                        {
                            <li class="list-group-item d-flex justify-content-between align-items-center">
                                <a href="@Url.Action("TrackIndex", "Ticket",new { statusCode = @row["status_code"] })" class="col-sm-3">@row["status_name"]</a>
                                <span class="badge bg-secondary">(@row["count"])</span>
                                
                            </li>
                        }
                    }
                </ul>
            </div>
        </div>
    </div> *@

    <div class="row mb-4">
        <!-- Tickets Assigned -->
        <div class="col-md-4">
            <div class="card shadow-sm p-3 mb-3 text-center">
                <h5 class="fw-bold">Tickets Assigned</h5>
                <h3 class="text-info mb-0">@((tickets != null) ? tickets.Count : 0)</h3>
            </div>
        </div>

        <!-- Ticket Status Summary -->
        <div class="col-md-8">
            <div class="card shadow-sm p-3 mb-3">
                <h5 class="fw-bold mb-3">Ticket Status Summary</h5>

                <ul class="list-group list-group-flush">
                    @if (statusCounts != null)
                    {
                        foreach (var row in statusCounts)
                        {
                            var statusName = row["status_name"].ToString().ToLower();
                            var badgeClass = "bg-secondary";

                            // Color-code badges like Admin dashboard
                            if (statusName.Contains("cancel")) badgeClass = "bg-danger";
                            else if (statusName.Contains("closed")) badgeClass = "bg-dark";
                            else if (statusName.Contains("in_progress")) badgeClass = "bg-warning text-dark";
                            else if (statusName.Contains("resolved")) badgeClass = "bg-primary";

                            <li class="list-group-item d-flex justify-content-between align-items-center px-2 py-2">
                                <a href="@Url.Action("TrackIndex", "Ticket", new { statusCode = row["status_code"] })"
                                   class="text-decoration-none fw-semibold text-primary">
                                    @row["status_name"]
                                </a>
                                <span class="badge rounded-pill @badgeClass px-3 py-2">
                                    @row["count"]
                                </span>
                            </li>
                        }
                    }
                </ul>
            </div>
        </div>
    </div>



    <h4>My Assigned Tickets</h4>
    <table id="supporterTicketsTable" class="table table-bordered table-hover">
        <thead>
            <tr>
                <th>Ticket ID</th>
                <th>Subject</th>
                <th>Customer</th>
                <th>Status</th>
                <th>Priority</th>
                <th>Deadline</th>
                <th>View</th>
                <th>Change Status</th>
            </tr>
        </thead>
        <tbody>
            @if (tickets != null && tickets.Count > 0)
            {
                foreach (var ticket in tickets)
                {
                    // Color code rows and badges
                    string statusLower = ticket["status"].ToString().ToLower();
                    string rowClass = "";
                    string badgeClass = "secondary";
                    switch (statusLower)
                    {
                        case "open":
                            rowClass = "table-success";
                            badgeClass = "success";
                            break;
                        case "closed":
                            rowClass = "table-danger";
                            badgeClass = "danger";
                            break;
                        case "resolved":
                            rowClass = "table-primary";
                            badgeClass = "primary";
                            break;
                        case "in_progress":
                            rowClass = "table-warning";
                            badgeClass = "warning";
                            break;
                        case "cancel":
                            rowClass = "table-secondary";
                            badgeClass = "secondary";
                            break;
                    }
                    <tr class="@rowClass">
                        <td>@ticket["ticket_id"]</td>
                        <td>@ticket["subject"]</td>
                        <td>@ticket["customer_name"]</td>
                        <td>
                            <span class="badge bg-@badgeClass text-capitalize">
                                @ticket["status"]
                            </span>
                        </td>
                        <td>@ticket["priority"]</td>
                        <td>@ticket["deadline"]</td>
                        <td>
                            <a href="@Url.Action("Details", "Ticket", new { id = ticket["id"] })" class="btn btn-sm btn-outline-info">View</a>
                            <a href="@Url.Action("Thread", "Ticket", new { id = ticket["id"] })" class="btn btn-sm btn-primary ms-1">Thread</a>
                        </td>
                        <td>
                            @if (statusLower == "open" || statusLower == "in_progress")
                            {
                                <select id="status_@ticket["id"]" class="form-select d-inline w-auto">
                                    <option value="">Change Status</option>
                                    <option value="3">Resolved</option>
                                    <option value="4">Closed</option>
                                </select>

                                <textarea id="remark_@ticket["id"]" class="form-control mt-2" placeholder="Add a remark..."></textarea>   @* RemarkAdded *@


                                <button class="btn btn-sm btn-outline-primary" onclick="changeTicketStatus(@ticket["id"])">
                                    Update
                                </button>
                            }
                            else
                            {
                                <span class="text-muted">Finalized</span>
                            }
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr><td colspan="8" class="text-center">No tickets assigned to you.</td></tr>
            }
        </tbody>
    </table>
</div>
@section Scripts {
    <style>
        .dataTables_filter input {
            width: 200px !important;
        }

        .dt-buttons.btn-group {
            margin-bottom: 10px;
        }

        tr.table-success td {
            background-color: #d1e7dd !important;
        }

        tr.table-danger td {
            background-color: #f8d7da !important;
        }

        tr.table-primary td {
            background-color: #cfe2ff !important;
        }

        tr.table-warning td {
            background-color: #fff3cd !important;
        }

        tr.table-secondary td {
            background-color: #e2e3e5 !important;
        }
    </style>
    <script>
        $(function () {
            var tbl = $('#supporterTicketsTable').DataTable({
                retrieve: true,
                responsive: true,
                lengthChange: true,
                autoWidth: false,
                 dom: '<"row mb-2"<"col-sm-6 d-flex"B><"col-sm-3"l><"col-sm-3"f>>' +
                     '<"row"<"col-sm-12"tr>>' +
                     '<"row"<"col-sm-5"i><"col-sm-7"p>>',
                buttons: [
                    {
                        extend: 'copy',
                        exportOptions: {
                            columns: ':not(:nth-last-child(-n+2))'  // exclude last 2 columns
                        }
                    },
                    {
                        extend: 'csv',
                        exportOptions: {
                            columns: ':not(:nth-last-child(-n+2))'
                        }
                    },
                    {
                        extend: 'excel',
                        exportOptions: {
                            columns: ':not(:nth-last-child(-n+2))'
                        }
                    },
                    {
                        extend: 'pdf',
                        exportOptions: {
                            columns: ':not(:nth-last-child(-n+2))'
                        }
                    },
                    {
                        extend: 'print',
                        exportOptions: {
                            columns: ':not(:nth-last-child(-n+2))'
                        }
                    },
                    'colvis'
                ],
            
                order: [],
                language: { search: "Search:" }
            });
            tbl.buttons().container().appendTo($('#supporterTicketsTable_wrapper .col-sm-4:eq(0)'));
            $('.dataTables_wrapper .dt-buttons').css({ 'float': 'left' });
        });


            
       
    

        function changeTicketStatus(ticketId) {
           
            var dropdown = document.getElementById('status_' + ticketId);
            var newStatus = dropdown.value;
        var remark = document.getElementById('remark_' + ticketId).value;
            if (!newStatus) {
                alert("Please select a status to update.");
                return;
            }

            if (!confirm("Are you sure you want to update the ticket status?")) {
                return;
            }

            $.ajax({
                url: '@Url.Action("ChangeStatus", "Ticket")',
                type: 'POST',
                data: {
                    ticketId: ticketId,
                    newStatus: newStatus,
                    remark: remark
                },
                success: function(response) {
                    if (response.success) {
                        // Optionally update status and controls live
                        alert("status changed successfully");
                        location.reload(); // simplest way (or refresh just the cell with JS)
                    } else {
                        alert(response.message || "An error occurred.");
                    }
                },
                error: function() {
                    alert("Error updating ticket. Please try again.");
                }
            });
        }
    </script>
}

